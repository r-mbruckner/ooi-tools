<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
  http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

{% for context in contexts %}{% for row in context.rows %}
    <bean id="{{row.name}}_{{row.suffix}}Processor" class="{{row.klass}}">
        <constructor-arg index="0" value="{{row.name}}_{{row.suffix}}" />
        <constructor-arg index="1" value="#{basePythonCodeLocalizationPath}" />
        <constructor-arg index="2" value="mi.dataset.driver{{row.driver}}" />
    </bean>

{% endfor %}{% endfor %}
{% for context in contexts %}
    <camelContext id="{{context.name}}-decode-camel"
        xmlns="http://camel.apache.org/schema/spring" errorHandlerRef="errorHandler">

{% for row in context.rows %}
        <endpoint id="{{row.name}}_{{row.suffix}}FileEndpoint"
            uri="file:${edex.home}/data/ooi/{{row.name}}_{{row.suffix}}?delete=true&amp;delay=3000&amp;maxMessagesPerPoll=30&amp;exclusiveReadLockStrategy=#fileChangedStrategy" />

{% endfor %}{% for row in context.rows %}
        <route id="{{row.name}}_{{row.suffix}}FileConsumerRoute">
            <from ref="{{row.name}}_{{row.suffix}}FileEndpoint" />
            <setHeader headerName="deliveryType">
                <constant>{{row.suffix}}</constant>
            </setHeader>
            <setHeader headerName="sensor">
                <constant>{{row.sensor}}</constant>
            </setHeader>
            <bean ref="fileToString" />
            <to uri="jms-durable:queue:Ingest.{{row.name}}_{{row.suffix}}" />
        </route>

        <route id="{{row.name}}_{{row.suffix}}Ingest">
            <from uri="jms-durable:queue:Ingest.{{row.name}}_{{row.suffix}}?concurrentConsumers=4" />
            <doTry>
                <pipeline>
                    <bean ref="{{row.name}}_{{row.suffix}}Processor" />
                    <to uri="vm:generate?concurrentConsumers=10" />
                </pipeline>
                <doCatch>
                    <exception>java.lang.Throwable</exception>
                    <to uri="log:ooi.{{row.name}}?level=ERROR" />
                </doCatch>
            </doTry>
        </route>

{% endfor %}{% endfor %}
    </camelContext>
</beans>
